import extern "btBulletDynamicsCommon.h" {
    extern struct btDefaultCollisionConfiguration {
        public function btDefaultCollisionConfiguration() -> btDefaultCollisionConfiguration
    }

    extern struct btCollisionDispatcher {
        public function btCollisionDispatcher(
            anon collision_configuration: raw btDefaultCollisionConfiguration
        ) -> btCollisionDispatcher
    }

    extern struct btDbvtBroadphase {
        public function btDbvtBroadphase() -> btDbvtBroadphase
    }

    extern struct btSequentialImpulseConstraintSolver {
        public function btSequentialImpulseConstraintSolver() -> btSequentialImpulseConstraintSolver
    }

    extern struct btAlignedObjectArray<T> {
        function at(this, anon n: i32) -> T
    }

    extern struct btCollisionObject { }

    extern struct btRigidBody {
        function upcast(anon obj: raw btCollisionObject) -> raw btRigidBody
    }

    extern struct btDiscreteDynamicsWorld {
        public function btDiscreteDynamicsWorld(
            dispatcher: raw btCollisionDispatcher, overlapping_pair_cache: raw btDbvtBroadphase, solver: raw btSequentialImpulseConstraintSolver, collision_configuration: raw btDefaultCollisionConfiguration
        ) -> btDiscreteDynamicsWorld

        public function getCollisionObjectArray(this) -> &btAlignedObjectArray<raw btCollisionObject>

        public function getNumCollisionObjects(this) -> i32

        public function removeCollisionObject(mut this, anon obj: raw btCollisionObject)
    }

    extern struct btCollisionShape { }

    extern struct btVector3 {
        public function btVector3(anon x: f32, anon y: f32, anon z: f32) -> btVector3
    }

    extern struct btTransform {
        public function btTransform() -> btTransform

        public function setIdentity(mut this)

        public function setOrigin(mut this, anon origin: &btVector3)
    }

    extern struct btBoxShape {
        public function btBoxShape(anon x: f32, anon y: f32, anon z: f32) -> btBoxShape
    }
}

import extern "btBulletDynamicsCommon.h" {
    extern struct btDefaultCollisionConfiguration {
        public function btDefaultCollisionConfiguration() -> btDefaultCollisionConfiguration
    }

    extern struct btCollisionDispatcher {
        public function btCollisionDispatcher(
            anon collision_configuration: raw btDefaultCollisionConfiguration
        ) -> btCollisionDispatcher
    }

    extern struct btDbvtBroadphase {
        public function btDbvtBroadphase() -> btDbvtBroadphase
    }

    extern struct btSequentialImpulseConstraintSolver {
        public function btSequentialImpulseConstraintSolver() -> btSequentialImpulseConstraintSolver
    }

    extern struct btAlignedObjectArray<T> {
        public function at(this, anon n: i32) -> T
    }

    extern struct btCollisionObject { }

    extern struct btRigidBody {
        public function upcast(anon obj: raw btCollisionObject) -> raw btRigidBody
    }

    extern struct btDiscreteDynamicsWorld {
        public function btDiscreteDynamicsWorld(
            dispatcher: raw btCollisionDispatcher, overlapping_pair_cache: raw btDbvtBroadphase, solver: raw btSequentialImpulseConstraintSolver, collision_configuration: raw btDefaultCollisionConfiguration
        ) -> btDiscreteDynamicsWorld

        public function addRigidBody(mut this, body: raw btRigidBody)

        public function getCollisionObjectArray(this) -> &btAlignedObjectArray<raw btCollisionObject>

        public function getNumCollisionObjects(this) -> i32

        public function removeCollisionObject(mut this, anon obj: raw btCollisionObject)

        public function stepSimulation(mut this, time_step: f32, max_sub_steps: i32) -> i32
    }

    extern struct btVector3 {
        public function btVector3(anon x: f32, anon y: f32, anon z: f32) -> btVector3

        public function getX(this) -> f32

        public function getY(this) -> f32

        public function getZ(this) -> f32
    }

    extern struct btTransform {
        public function btTransform() -> btTransform

        public function getOrigin(this) -> btVector3

        public function setIdentity(mut this)

        public function setOrigin(mut this, anon origin: &btVector3)
    }

    extern struct btCollisionShape {
        public function calculateLocalInertia(this, mass: f32, local_inertia: &mut btVector3)
    }

    extern struct btBoxShape {
        public function btBoxShape(anon half_extents: btVector3) -> btBoxShape
    }

    extern struct btSphereShape {
        public function btSphereShape(anon radius: f32) -> btSphereShape
    }

    extern struct btDefaultMotionState {
        public function btDefaultMotionState(anon transform: &btTransform) -> btDefaultMotionState
    }
}
